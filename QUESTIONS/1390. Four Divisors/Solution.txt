1390. Four Divisors

class Solution:
    def solver(self, num):
        ans = set()
        # count = 0

        for i in range(1, floor(sqrt(num)) + 1):
            if num % i == 0:
                # count += 1
                ans.add(i)
                ans.add(num // i)
            if len(ans) > 4:
                return 0
        
        if len(ans) == 4:
            return sum(ans)
        else:
            return 0

    def sumFourDivisors(self, nums: List[int]) -> int:
        ans = 0
        for i in nums:
            ans += self.solver(i)

        return ans 

"""
class Solution:
    def helper (self, num):
        ans = 2
        sum = 1 + num

        for i in range(2, int(num ** (1/2))):
            if num % i == 0:
                ans += 1
                sum += i
            if ans > 4:
                return 0
        
        if ans == 4:
            return sum
        else:
            return 0

    def sumFourDivisors(self, nums: List[int]) -> int:
        ans = 0
        for i in nums:
            ans += self.helper(i)

        return ans        

"""
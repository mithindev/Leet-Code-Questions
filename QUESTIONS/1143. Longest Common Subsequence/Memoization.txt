class Solution:
    def longestCommonSubsequence(self, text1: str, text2: str) -> int:
        m = len(text1)
        n = len(text2)

        matrix = [[0 for i in range(n + 1)] for j in range(m + 1)]

        return self.lcs(text1, text2, matrix, m, n)

    def lcs(self, txt1, txt2, matrix, m, n):
        if m == 0 or n == 0:
            return 0

        if matrix[m][n] != 0:
            return matrix[m][n]

        elif txt1[m - 1] == txt2[n - 1]:
            matrix[m][n] = 1 + self.lcs(txt1, txt2, matrix, m - 1, n - 1)
            return matrix[m][n]

        matrix[m][n] = max(self.lcs(txt1, txt2, matrix, m, n - 1), self.lcs(txt1, txt2, matrix, m - 1, n))
        return matrix[m][n]

class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int[] arr = merge(nums1, nums2);
        sort(arr);
        System.out.println(Arrays.toString(arr));
        

        double avg = 0;

        if (arr.length%2 == 0) {
            int mid = arr.length/2-1;
            if (arr.length == 2) {
                double a = arr[0] ;
                double b = arr[1];
                double ans = (a+b)/2;
                // System.out.println(ans);
                return ans;
            } else {
                double a = arr[mid] ;
                double b = arr[mid+1];
                double ans = (a+b)/2;
                return ans;
            }
        } else{
            int mid = arr.length/2;
            if (arr.length == 1) {
                double ans = arr[0];
                return ans;
            } else {
                double ans = arr[mid];
                return ans;
            }
        }


    }

    public void sort(int[] arr) {
        if (arr.length < 2 ) {
            return;
        }
        for (int i = 0;i < arr.length; i++) {
            for (int j = 1; j < arr.length; j++) {
                if (arr[j-1] > arr[j]) {
                    int temp = arr[j];
                    arr[j] = arr[j-1];
                    arr[j-1] = temp;
                }
            }
        }
    }

    public int[] merge(int[] arr1, int[] arr2) {
        int[] ans = new int[arr1.length+arr2.length];
        int k = 0;
        for (int i = 0; i < arr1.length; i++) {
            ans[k] = arr1[i];
            k++;
        }
        for (int i = 0; i < arr2.length; i++) {
            ans[k] = arr2[i];
            k++;
        }
        return ans;
    }
}
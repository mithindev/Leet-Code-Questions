647. Palindromic Substrings

class Solution:
    def isPalindrome(self, word, i, j, dp):
        # BASE CASE
        if j <= i:
            return True

        if dp[i][j] != -1:
            return dp[i][j]

        if word[i] == word[j]:
            dp[i][j] = self.isPalindrome(word, i + 1, j - 1, dp)
            return dp[i][j]
        else:
            dp[i][j] = False
            return False

    def countSubstrings(self, word: str) -> int:
        dp = [[-1 for _ in range(len(word))] for _ in range(len(word))]
        ans = 0

        for i in range(len(word)):
            for j in range(len(word) - 1, i - 1, -1):
                if self.isPalindrome(word, i, j, dp):
                    ans += 1
        
        return ans
        
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        ListNode temp = new ListNode();
        temp.next = head;
        ListNode pre = temp;

        for (int i = 0; i < left - 1; i++) {
            pre = pre.next;
        }

        ListNode start = pre.next;
        ListNode current = start;
        ListNode prev = null;

        for (int i = 0; i < right - left + 1; i++) {
            ListNode nxt = current.next;
            current.next = prev;
            prev = current;
            current = nxt;
        }

        pre.next = prev;
        start.next = current;

        return temp.next;
    }
}

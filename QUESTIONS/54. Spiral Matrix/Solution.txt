class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> ans = new LinkedList<>();

        int row = matrix.length;
        int col = matrix[0].length;

        int r = 0; 
        int c = 0; 

        while (row > 0 && col > 0) {
            if (row == 1) {
                for (int i = 0; i < col; i++) {
                    ans.add(matrix[r][c++]);
                }
                break;
            } else if (col == 1) {
                for (int i = 0; i < row; i++) {
                    ans.add(matrix[r++][c]);
                }
                break;
            }

            for (int i = 0; i < col - 1; i++){
                ans.add(matrix[r][c++]);
            }

            for (int i = 0; i < row - 1; i++) {
                ans.add(matrix[r++][c]);
            }

            for (int i = 0; i < col - 1; i++) {
                ans.add(matrix[r][c--]);
            }

            for (int i = 0; i < row - 1; i++) {
                ans.add(matrix[r--][c]);
            }

            r++;
            c++;

            row -=2;
            col -=2;
        }

        return ans;
    }
}